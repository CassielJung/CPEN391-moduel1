module reg32_avalon_interface (
    input clk, reset, write, read, chipselect,
    input [3:0] byteenable,
    input [31:0] writedata,
    output [31:0] readdata,
    output [31:0] Q_export
);

    wire [31:0] to_reg, from_reg;
    wire [3:0] local_byteenable;

    assign to_reg = writedata;
    assign local_byteenable = (chipselect & write) ? byteenable : 4'd1;
    
    reg32 U1 (.clk(clk), .reset(reset), .D(to_reg),
                 .byteenable(local_byteenable), .Q(from_reg));

    assign readdata = from_reg;
    assign Q_export = from_reg;
    
endmodule